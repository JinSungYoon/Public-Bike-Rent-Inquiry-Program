<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jindory.dataSource.PublicBikeMember">
	<insert id = "register">
		INSERT INTO PUBLIC_BIKE_MEMBER(
										MEMBER_ID,
								        MEMBER_PW,
								        MEMBER_NAME,
								        MEMBER_GENDER,
								        MEMBER_PHONE,
								        MEMBER_ADDRESS,
								        MEMBER_BERTH,
								        MEMBER_ROLE,
								        MEMBER_ACTIVE_YN,
								        CREATE_DATE,
								        UPDATE_DATE )
								VALUES(
										#{memberId},
										#{memberPw},
										#{memberName},
										#{memberGender},
										#{memberPhone},
										#{memberAddress},
										#{memberBerth},
										#{memberRole},
										'Y',
										SYSDATE,
										SYSDATE
								)
	</insert>
	
	<update id="memberUpdate">
		UPDATE PUBLIC_BIKE_MEMBER SET 
		MEMBER_PW = #{memberPw},
		MEMBER_NAME = #{memberName},
        MEMBER_GENDER = #{memberGender},
        MEMBER_PHONE = #{memberPhone},
        MEMBER_ADDRESS = #{memberAddress},
        MEMBER_BERTH = #{memberBerth}
        WHERE MEMBER_ID = #{memberId}
	</update>
	
	<resultMap type="org.jindory.domain.PublicBikeMemberVO" id="memberMap">
		<id property="memberId" column="member_id"/>
		<result property="memberId" column="member_id"/>
		<result property="memberPw" column="member_pw"/>
		<result property="memberName" column="member_name"/>
		<result property="memberGender" column="member_gender"/>
		<result property="memberPhone" column="member_phone"/>
		<result property="createDate" column="create_date"/>
		<result property="updateDate" column="update_date"/>
		<collection property="authList" resultMap="authMap"></collection>
	</resultMap> 
	
	<resultMap type="org.jindory.domain.PublicBikeMemberAuthVO" id="authMap">
		<result property="memberId" column="member_id"/>
		<result property="auth" column="auth"/>
	</resultMap>
	
	<!-- select id="read" resultMap="memberMap">
		SELECT mem.MEMBER_ID as memberId,mem.MEMBER_PW as memberPw, mem.MEMBER_NAME as memberName, mem.CREATE_DATE as createDate, mem.UPDATE_DATE as updateDate, auth.auth
		FROM PUBLIC_BIKE_MEMBER mem LEFT OUTER JOIN PUBLIC_BIKE_MEMBER_AUTH auth ON mem.MEMBER_ID = auth.MEMBER_ID
		WHERE mem.MEMBER_ID = #{memberId}
	</select-->
	
	<select id="read" resultMap="memberMap">
		SELECT mem.MEMBER_ID, mem.MEMBER_PW, mem.MEMBER_NAME, mem.CREATE_DATE, mem.UPDATE_DATE, auth.auth
		FROM PUBLIC_BIKE_MEMBER mem LEFT OUTER JOIN PUBLIC_BIKE_MEMBER_AUTH auth ON mem.MEMBER_ID = auth.MEMBER_ID
		WHERE mem.MEMBER_ID = #{memberId}
	</select>
	
	<select id="login" resultMap="memberMap">
		SELECT mem.MEMBER_ID as memberId, mem.MEMBER_NAME as memberName, mem.CREATE_DATE as createDate, mem.UPDATE_DATE as updateDate, auth.auth
		FROM PUBLIC_BIKE_MEMBER mem LEFT OUTER JOIN PUBLIC_BIKE_MEMBER_AUTH auth ON mem.MEMBER_ID = auth.MEMBER_ID
		WHERE mem.MEMBER_ID = #{memberId}
		AND mem.MEMBER_PW = #{memberPw}
	</select>
	
	<select id="checkId" resultType = "string">
		SELECT MEMBER_ID
		FROM PUBLIC_BIKE_MEMBER
		WHERE 1=1
			AND MEMBER_ID = #{memberId}
	</select>
		
</mapper>