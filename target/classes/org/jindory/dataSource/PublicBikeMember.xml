<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jindory.dataSource.PublicBikeMember">
	<insert id = "registerUserInfo">
		INSERT INTO PUBLIC_BIKE_MEMBER(
										MEMBER_ID,
								        MEMBER_PW,
								        MEMBER_NAME,
								        MEMBER_GENDER,
								        MEMBER_PHONE,
								        MEMBER_ADDRESS,
								        MEMBER_BERTH,
								        MEMBER_ROLE,
								        MEMBER_ACTIVE_YN,
								        CREATE_DATE,
								        UPDATE_DATE )
								VALUES(
										#{memberId},
										#{memberPw},
										#{memberName},
										#{memberGender},
										#{memberPhone},
										#{memberAddress},
										#{memberBerth},
										#{memberRole},
										'Y',
										SYSDATE,
										SYSDATE
								)
	</insert>
	
	<insert id = "registerUserAuth">
		INSERT INTO PUBLIC_BIKE_MEMBER_AUTH(
										MEMBER_ID,
										AUTH,
										CREATE_DATE,
										UPDATE_DATE
								    	)
								VALUES(
										#{memberId},
										#{auth},
										SYSDATE,
										SYSDATE
								)
	</insert>
	
	<update id="memberUpdate">
		UPDATE PUBLIC_BIKE_MEMBER SET 
		MEMBER_PW = #{memberPw},
		MEMBER_NAME = #{memberName},
        MEMBER_GENDER = #{memberGender},
        MEMBER_PHONE = #{memberPhone},
        MEMBER_ADDRESS = #{memberAddress},
        MEMBER_BERTH = #{memberBerth}
        WHERE MEMBER_ID = #{memberId}
	</update>
	
	<select id="searchFavorites" resultType="org.jindory.domain.PublicBikeFavoritesVO">
		SELECT memberId,stationId,stationName,noticeBikeNum,noticeScope,noticeTime1,noticeTime2,noticeTime3,effectiveDate,activeYn
	    FROM (
	    SELECT ROWNUM rn,MEMBER_ID as memberId,STATION_ID as stationId,STATION_NAME as stationName,NOTICE_BIKE_NUM as noticeBikeNum,NOTICE_SCOPE as noticeScope,NOTICE_TIME1 as noticeTime1,NOTICE_TIME2 as noticeTime2,NOTICE_TIME3 as noticeTime3,TO_CHAR(EFFECTIVE_DATE,'YYYY-MM-DD HH24:MI') as effectiveDate,ACTIVE_YN as activeYn
			FROM public_bike_favorites
			WHERE ROWNUM BETWEEN 1 AND 100
	          AND MEMBER_ID = #{memberId}
	    ORDER BY CREATE_DATE,STATION_ID
	    )
    	WHERE rn BETWEEN (#{pageNum}*#{amount})-9 AND (#{pageNum}*#{amount})
	</select>
		
	<select id="getFavoritesCount" resultType="int">
	SELECT COUNT(*) as CNT
	FROM public_bike_favorites
	WHERE MEMBER_ID = #{memberId}
	</select>
	
	<select id="getAlertFavorites" resultMap="favoritesMap">
	SELECT * 
	FROM public_bike_favorites
	WHERE 1=1
	    AND ACTIVE_YN = 'Y'
	    AND EFFECTIVE_DATE > SYSDATE
	    AND NOTICE_BIKE_NUM IS NOT NULL
	    AND(NOTICE_TIME1 BETWEEN TO_CHAR(SYSDATE - 15/(24*60),'HH24:MI') AND TO_CHAR(SYSDATE + 15/(24*60),'HH24:MI') 
			OR NOTICE_TIME2 BETWEEN TO_CHAR(SYSDATE - 15/(24*60),'HH24:MI') AND TO_CHAR(SYSDATE + 15/(24*60),'HH24:MI') 
			OR NOTICE_TIME3 BETWEEN TO_CHAR(SYSDATE - 15/(24*60),'HH24:MI') AND TO_CHAR(SYSDATE + 15/(24*60),'HH24:MI') 
			)
	</select>
	
	<insert id="insertFavorites">
		INSERT INTO PUBLIC_BIKE_FAVORITES(
										MEMBER_ID,
										STATION_ID,
										STATION_NAME,
										<if test="noticeBikeNum!=null">
										NOTICE_BIKE_NUM,
										</if>
										<if test="noticeScope!=null">
										NOTICE_SCOPE,
										</if>
										<if test="effectiveDate!=null">
										EFFECTIVE_DATE,
										</if>
										<if test="noticeTime1!=null">
										NOTICE_TIME1,
										</if>
										<if test="noticeTime2!=null">
										NOTICE_TIME2,
										</if>
										<if test="noticeTime3!=null">
										NOTICE_TIME3,
										</if>
										<if test="activeYn!=null">
										ACTIVE_YN,
										</if>
										CREATE_DATE,
										UPDATE_DATE
										)
									VALUES(
										#{memberId},
										#{stationId},
										#{stationName},
										<if test="noticeBikeNum!=null">
										#{noticeBikeNum},
										</if>
										<if test="noticeScope!=null">
										#{noticeScope},
										</if>
										<if test="noticeTime1!=null">
										#{noticeTime1},
										</if>
										<if test="noticeTime2!=null">
										#{noticeTime2},
										</if>
										<if test="noticeTime3!=null">
										#{noticeTime3},
										</if>
										<if test="effectiveDate!=null">
										TO_DATE(#{effectiveDate},'YYYY-MM-DD HH24:MI'),
										</if>
										<if test="activeYn!=null">
										#{activeYn},
										</if>
										SYSDATE,
										SYSDATE
										)
	</insert>
	
	<update id="updateFavorites">
		UPDATE PUBLIC_BIKE_FAVORITES SET
			<if test="noticeBikeNum!=null">
			NOTICE_BIKE_NUM = #{noticeBikeNum},
			</if>
			<if test="noticeScope!=null">
			NOTICE_SCOPE    = #{noticeScope},
			</if>
			<if test="noticeTime1!=null">
			#{noticeTime1},
			</if>
			<if test="noticeTime2!=null">
			#{noticeTime2},
			</if>
			<if test="noticeTime3!=null">
			#{noticeTime3},
			</if>
			<if test="effectiveDate!=null">
			EFFECTIVE_DATE  = TO_DATE(#{effectiveDate},'YYYY-MM-DD HH24:MI'),
			</if>
			<if test="activeYn!=null">
			ACTIVE_YN       = #{activeYn},
			</if>
			UPDATE_DATE     = SYSDATE
		WHERE MEMBER_ID  = #{memberId} 
		AND   STATION_ID = #{stationId} 
	</update>
	
	<delete id="deleteFavorites">
		DELETE PUBLIC_BIKE_FAVORITES 
		WHERE MEMBER_ID = #{memberId}
		AND   STATION_ID = #{stationId}
	</delete>
	
	<resultMap type="org.jindory.domain.PublicBikeFavoritesVO" id="favoritesMap">
		<id property="memberId" column="member_id"/>
		<id property="stationId" column="station_id"/>
		<result property="memberId" column="member_id"/>
		<result property="stationId" column="station_id"/>
		<result property="stationName" column="station_name"/>
		<result property="noticeBikeNum" column="notice_bike_num"/>
		<result property="noticeScope" column="notice_scope"/>
		<result property="noticeTime1" column="notice_time1"/>
		<result property="noticeTime2" column="notice_time2"/>
		<result property="noticeTime3" column="notice_time3"/>
		<result property="effectiveDate" column="effective_date"/>
		<result property="activeYn" column="active_yn"/>
		<result property="createDate" column="create_date"/>
		<result property="updateDate" column="update_date"/>
	</resultMap>
	
	<resultMap type="org.jindory.domain.PublicBikeMemberVO" id="memberMap">
		<id property="memberId" column="member_id"/>
		<result property="memberId" column="member_id"/>
		<result property="memberPw" column="member_pw"/>
		<result property="memberName" column="member_name"/>
		<result property="memberGender" column="member_gender"/>
		<result property="memberPhone" column="member_phone"/>
		<result property="createDate" column="create_date"/>
		<result property="updateDate" column="update_date"/>
		<collection property="authList" resultMap="authMap"></collection>
	</resultMap> 
	
	<resultMap type="org.jindory.domain.PublicBikeMemberAuthVO" id="authMap">
		<result property="memberId" column="member_id"/>
		<result property="auth" column="auth"/>
	</resultMap>
	
	<select id="read" resultMap="memberMap">
		SELECT mem.MEMBER_ID, mem.MEMBER_PW, mem.MEMBER_NAME, mem.CREATE_DATE, mem.UPDATE_DATE, auth.auth
		FROM PUBLIC_BIKE_MEMBER mem LEFT OUTER JOIN PUBLIC_BIKE_MEMBER_AUTH auth ON mem.MEMBER_ID = auth.MEMBER_ID
		WHERE mem.MEMBER_ID = #{memberId}
	</select>
	
	<select id="login" resultMap="memberMap">
		SELECT mem.MEMBER_ID as memberId, mem.MEMBER_NAME as memberName, mem.CREATE_DATE as createDate, mem.UPDATE_DATE as updateDate, auth.auth
		FROM PUBLIC_BIKE_MEMBER mem LEFT OUTER JOIN PUBLIC_BIKE_MEMBER_AUTH auth ON mem.MEMBER_ID = auth.MEMBER_ID
		WHERE mem.MEMBER_ID = #{memberId}
		AND mem.MEMBER_PW = #{memberPw}
	</select>
	
	<select id="checkId" resultType = "string">
		SELECT MEMBER_ID
		FROM PUBLIC_BIKE_MEMBER
		WHERE 1=1
			AND MEMBER_ID = #{memberId}
	</select>
		
</mapper>